{
    "docs": [
        {
            "location": "/", 
            "text": "Home\n\n\nCheatsheets for things I keep forgetting\n\n\n\n\nThis website is generated by \nmkdocs\n using the \nmaterial theme\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\nmkdocs gh-deploy\n - deploy changes to github.", 
            "title": "Home"
        }, 
        {
            "location": "/#home", 
            "text": "", 
            "title": "Home"
        }, 
        {
            "location": "/#cheatsheets-for-things-i-keep-forgetting", 
            "text": "This website is generated by  mkdocs  using the  material theme .", 
            "title": "Cheatsheets for things I keep forgetting"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.  mkdocs gh-deploy  - deploy changes to github.", 
            "title": "Commands"
        }, 
        {
            "location": "/sbt/general/", 
            "text": "General\n\n\nCreating a new Sbt project\n\n\n\n\nSbt has a command called new, to create new build definitions from a template.\n\n\nTo use \nsbt new\n you will need Sbt version 0.13.13 or above\n\n\n$ sbt sbtVersion\n\n 0.13.17\n\n\n\n\n\nTo setup a new scala sbt project\n\n\n$ sbt new scala/scala-seed.g8\n\n\n\n\n\nList of giter8 templates from official sources can be found \nhere\n\n\nProject sbt version\n\n\n\n\nAs part of your build definition, specify the version of sbt that your build uses.\n\n\nProject will always build using the same version of Sbt, ignoring the global Sbt version.\n\n\n\n\nCreate a file named \nproject/build.properties\n then specify the sbt version as follows:\n\n\nsbt.version=0.13.17\n\n\n\n\n\nLayout\n\n\n\n\n???\n\n\nShell\n\n\n\n\n???\n\n\nPlugins\n\n\n\n\n???", 
            "title": "General"
        }, 
        {
            "location": "/sbt/general/#general", 
            "text": "", 
            "title": "General"
        }, 
        {
            "location": "/sbt/general/#creating-a-new-sbt-project", 
            "text": "Sbt has a command called new, to create new build definitions from a template.  To use  sbt new  you will need Sbt version 0.13.13 or above  $ sbt sbtVersion  0.13.17  To setup a new scala sbt project  $ sbt new scala/scala-seed.g8  List of giter8 templates from official sources can be found  here", 
            "title": "Creating a new Sbt project"
        }, 
        {
            "location": "/sbt/general/#project-sbt-version", 
            "text": "As part of your build definition, specify the version of sbt that your build uses.  Project will always build using the same version of Sbt, ignoring the global Sbt version.   Create a file named  project/build.properties  then specify the sbt version as follows:  sbt.version=0.13.17", 
            "title": "Project sbt version"
        }, 
        {
            "location": "/sbt/general/#layout", 
            "text": "???", 
            "title": "Layout"
        }, 
        {
            "location": "/sbt/general/#shell", 
            "text": "???", 
            "title": "Shell"
        }, 
        {
            "location": "/sbt/general/#plugins", 
            "text": "???", 
            "title": "Plugins"
        }, 
        {
            "location": "/sbt/build-definition/", 
            "text": "Build definition\n\n\n\n\nNote\n\n\nFor Sbt versions lower than \n0.13.7\n, Settings must be separated by blank lines", 
            "title": "Build definition"
        }, 
        {
            "location": "/sbt/build-definition/#build-definition", 
            "text": "Note  For Sbt versions lower than  0.13.7 , Settings must be separated by blank lines", 
            "title": "Build definition"
        }, 
        {
            "location": "/git/general/", 
            "text": "General\n\n\nmerge-base\n\n\n\n\n\n\nmerge-base finds the best common ancestor(s) between two commits.\n\n\n\n\nuseful for rebasing a stale branch onto master\n\n\n\n\n\n\nusage\n\n\nX is a commit\nY is the commit you want X to rebase onto\n\ngit merge-base X Y\n546ae664634d9c44c\ngit reset --soft 546ae664634d9c44c\ngit commit -m \n???\n\ngit rebase master\n\n\n\n\n\ncommit --amend\n\n\n\n\n\n\nThe --amend option is a convenient way to modify the most recent commit\n\n\n\n\nuseful for changing the commit message of the previous commit without resetting\n\n\nuseful for squashing changes into the previous commit without resetting\n\n\n\n\n\n\nusage\n\n\ngit commit --amend\n\n\n\n\n\n\n\nwill prompt you to open an editor\n\n\n\n\nTo amend the previous commit with a new commit message without opening an editor use:\n\n\ngit commit --amend -m \nan updated commit message\n\n\n\n\n\n\nTo simply squash staged changes into the previous commit without changing the commit message, use:\n\n\ngit commit --amend --no-edit", 
            "title": "General"
        }, 
        {
            "location": "/git/general/#general", 
            "text": "", 
            "title": "General"
        }, 
        {
            "location": "/git/general/#merge-base", 
            "text": "merge-base finds the best common ancestor(s) between two commits.   useful for rebasing a stale branch onto master", 
            "title": "merge-base"
        }, 
        {
            "location": "/git/general/#usage", 
            "text": "X is a commit\nY is the commit you want X to rebase onto\n\ngit merge-base X Y\n546ae664634d9c44c\ngit reset --soft 546ae664634d9c44c\ngit commit -m  ??? \ngit rebase master", 
            "title": "usage"
        }, 
        {
            "location": "/git/general/#commit-amend", 
            "text": "The --amend option is a convenient way to modify the most recent commit   useful for changing the commit message of the previous commit without resetting  useful for squashing changes into the previous commit without resetting", 
            "title": "commit --amend"
        }, 
        {
            "location": "/git/general/#usage_1", 
            "text": "git commit --amend   will prompt you to open an editor   To amend the previous commit with a new commit message without opening an editor use:  git commit --amend -m  an updated commit message   To simply squash staged changes into the previous commit without changing the commit message, use:  git commit --amend --no-edit", 
            "title": "usage"
        }
    ]
}